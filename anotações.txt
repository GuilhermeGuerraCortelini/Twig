composer é um Gerenciador de pacotes (ou dependências)
* Procura no Packagits que é um repositório de dependências (procurar os pacotes)

Twig - é uma ferramenta de gerenciamento de templates, separa o que é php e html
Mvc - model gerenciamento de dados/ view visualização / controller é a lógica
baixar twig = composer require twig/twig
carregar o autoload
raiz = vai renderizar os arquivos html
namespace - espaço de nome em que cada classe vai ter um namespace específico
=> equivalente

CRUD = CREATE / REATRIEVE / UPDATE / DELETE 

PDO = tem variáveis ? Sim = prepare, bind / Não = query

12/04 Prova Teórica -> o que é cada coisa ? como funciona? pra que serve?

extends -> buscar um arquivo como base de html
render -> escolhe um template e renderiza ele na tela

carbon = api do php / trabalhar com datas / pacote de um composer 
composer require <nome do pacote> / exemplo: composer require nesbot/carbon 

- composer require -> instalar um novo pacote (ja estou trabalhando no projeto e preciso de uma coisa nova)
- composer install -> instalar todos os pacotes do projeto (composer.json) (tenho nada instalado) / composer.lock (versões)
- composer update -> fazer update do composer (atualizar) 

fetchAll pega todas as linhas / fetch pega uma linha 

$array['idade'] = 20 / criar um novo valor em um vetor que já existe

baixar autenticator

excluir o .git no htdocs para não versionar 

git status / mostrar o status e ver se é ou não um repositório 
git init / criar o repositório 

master = branch principal do git
commit é sempre local (na máquina) oi